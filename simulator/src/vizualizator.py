import requests
import os
import time

SERVER_URL = "http://0.0.0.0:5000"  # –ê–¥—Ä–µ—Å —Å–µ—Ä–≤–µ—Ä–∞

def get_full_state():
    """–ü–æ–ª—É—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏–≥—Ä—ã"""
    try:
        response = requests.get(f"{SERVER_URL}/full-state", timeout=5)
        if response.status_code == 200:
            return response.json()
        print(f"–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞: {response.status_code}")
        return None
    except requests.exceptions.RequestException as e:
        print(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {str(e)}")
        return None

def display_game(state):
    """–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –∏–≥—Ä–æ–≤–æ–≥–æ –ø–æ–ª—è —Å –ø–æ–º–æ—â—å—é emoji"""
    width = state['width']
    height = state['height']
    
    # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç–æ–µ –ø–æ–ª–µ
    grid = [['‚¨úÔ∏è' for _ in range(width)] for _ in range(height)]
    
    # –†–∞—Å—Å—Ç–∞–≤–ª—è–µ–º –æ–±—ä–µ–∫—Ç—ã (–≤ –ø–æ—Ä—è–¥–∫–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–∞ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è)
    for obj in state['obstacles']:
        if 0 <= obj['x'] < width and 0 <= obj['y'] < height:
            grid[obj['y']][obj['x']] = 'üß±'  # –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è
    
    for res in state['resources']:
        if 0 <= res['x'] < width and 0 <= res['y'] < height:
            grid[res['y']][res['x']] = 'üíé'  # –†–µ—Å—É—Ä—Å—ã
    
    for npc in state['npcs']:
        if 0 <= npc['x'] < width and 0 <= npc['y'] < height:
            grid[npc['y']][npc['x']] = 'üëæ'  # NPC
    
    # –û—Ç–æ–±—Ä–∞–∂–∞–µ–º –∞–≥–µ–Ω—Ç–∞ (–ø–æ–≤–µ—Ä—Ö –¥—Ä—É–≥–∏—Ö –æ–±—ä–µ–∫—Ç–æ–≤)
    agent = state['agent']
    if 0 <= agent['x'] < width and 0 <= agent['y'] < height:
        # –í—ã–±–∏—Ä–∞–µ–º emoji –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        direction_emoji = {
            'up': 'üëÜ',
            'down': 'üëá',
            'left': 'üëà',
            'right': 'üëâ'
        }
        grid[agent['y']][agent['x']] = direction_emoji.get(agent['direction'], 'üë§')
    
    # –û—á–∏—â–∞–µ–º —ç–∫—Ä–∞–Ω
    os.system('cls' if os.name == 'nt' else 'clear')
    
    # –†–∏—Å—É–µ–º –ø–æ–ª–µ
    print(f"\n–ü–æ–ª–µ: {width}√ó{height} | –°—á–µ—Ç: {state['score']} | –†–µ—Å–ø–∞–≤–Ω—ã: {state['respawns']}")
    print("=" * (width * 2))
    for row in grid:
        print(''.join(row))
    print("=" * (width * 2))
    print(f"–ê–≥–µ–Ω—Ç: ({agent['x']}, {agent['y']}) "
          f"| NPC: {len(state['npcs'])} "
          f"| –†–µ—Å—É—Ä—Å—ã: {len(state['resources'])} "
          f"| –ü—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è: {len(state['obstacles'])}")

def main():
    """–û—Å–Ω–æ–≤–Ω–æ–π —Ü–∏–∫–ª –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞"""
    print("–ó–∞–ø—É—Å–∫ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä–∞ –∏–≥—Ä—ã...")
    print("–û–∂–∏–¥–∞–Ω–∏–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏–≥—Ä—ã –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ")
    
    while True:
        state = get_full_state()
        
        if state:
            display_game(state)
        else:
            print("–ò–≥—Ä–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏–ª–∏ —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω...")
        
        time.sleep(0.2)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n–í–∏–∑—É–∞–ª–∏–∑–∞—Ç–æ—Ä –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")